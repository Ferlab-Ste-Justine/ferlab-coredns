on:
  push:
    tags:
      - 'v*'
name: Upload Artifacts
jobs:
  upload:
    runs-on: ubuntu-20.04
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Build Linux Amd64 Binary
        run: ./build.sh
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
      - name: Build Linux Arm64 Binary
        run: ./build.sh
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
          ARCH: arm64
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Linux Amd64 Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-amd64.zip
          asset_name: linux-amd64.zip
          asset_content_type: application/zip
      - name: Upload Linux Arm64 Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-arm64.zip
          asset_name: linux-arm64.zip
          asset_content_type: application/zip